	<ValidateFunction name="Validate">
		<Comment>
			This is a sample validation function, with all of the field level validations disabled.  This can
			serve as an example of the types of validation functions that can be built.  Simply change the
			names of the nodes below from FakeField to Field.
		</Comment>
		<FakeField name="Description" type="length" min="5" max="30"/>
		<FakeField name="Distance" type="nonzero"/>
		<FakeField name="SiteId" type="nonzeroid"/>
		<FakeField name="PerDiem" type="numeric"/>
		<FakeField name="Children" type="childArray" function="Validate"/>
	</ValidateFunction>

	<LogChangesFunction name="LogChanges">
		<Comment>
			This is a sample LogChanges function, with all of the field information disabled.  This can
			serve as an example of the types of log changes functions that can be built.  Simply change the
			names of the nodes below from FakeField to Field.
		</Comment>
		<KeyField name="Id"/>
		<KeyField name="Number"/>
		<KeyField name="SubNumber"/>
		<FakeField name="Number"/>
		<FakeField name="SubNumber"/>
		<FakeField name="Description"/>
		<FakeField name="Children" type="childArray" function="LogChanges"/>
	</LogChangesFunction>

	<SortFunction name="FirstSort">
		<Comment>
			This is a sample sorting function with all of the comparison fields disabled.  This can
			serve as an example of the types of sorting that can be built with this.  Simply change the
			names of the nodes below from FakeField to Field.
		</Comment>
		<FakeField name="Name"/>
		<FakeField name="CreatedDate" desc="true"/>
		<FakeField name="Id"/>
	</SortFunction>

	<MatchFunction name="FirstMatch">
		<Comment>
			This is a sample matching function with all of the comparison fields disabled.  This can
			serve as an example of the types of matching that can be built with this.  Simply change the
			names of the nodes below from FakeField to Field.
		</Comment>
		<FakeField name="Name" type="contains"/>
		<FakeField name="Description" type="starts"/>
		<FakeField name="Value" type="ends"/>
	</MatchFunction>

	<XlsxFunction name="XlsxFormat">
		<Comment>
			This is a sample Xlsx format function with all of the fields disabled.  This can
			serve as an example of the types of formatting that can be built with this.  Simply change the
			names of the nodes below from FakeField to Field.
		</Comment>
		<FakeField name="Name" header="The Name" format="XLSX_STYLE_ITALIC"/>
		<FakeField name="Description" header="Descriptive Text"/>
		<FakeField name="Id" header="Identifier" format="XLSX_STYLE_BACKGROUND_RED"/>
	</XlsxFunction>

	<!-- Include this if you need to access any of the fields in this object from a CannedEmail
		or other situation where you need a std::map<twine, twine> containing all of the fields
		in this object.
	-->
	<MapFunction name="GetMap"/>

</SQLXml>
